// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Home /> renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 17,
        "fontWeight": "bold",
        "marginLeft": 10,
        "marginRight": 10,
        "marginTop": 10,
      }
    }
  >
    Number of days until you need to take another picture of your mole: 
  </Text>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "marginHorizontal": 10,
        "marginTop": 10,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "fontSize": 200,
        "marginLeft": 10,
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 20,
          "paddingVertical": 5,
        }
      }
    >
      Press to schedule a notification
    </Text>
  </View>
  <View
    style={
      Object {
        "borderRadius": 10,
        "flexDirection": "row",
        "marginHorizontal": 5,
        "marginTop": 2,
        "width": 750,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#3366ff",
            "flexWrap": "wrap",
            "fontSize": 20,
            "marginHorizontal": 5,
            "paddingRight": 45,
            "textDecorationLine": "underline",
          }
        }
      >
        About SCaRF
      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#3366ff",
            "flexWrap": "wrap",
            "fontSize": 20,
            "marginHorizontal": 5,
            "paddingRight": 45,
            "textDecorationLine": "underline",
          }
        }
      >
        Donate to SCaRF
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginHorizontal": 5,
        "paddingVertical": 5,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "borderRadius": 10,
            "height": 360,
            "marginHorizontal": 5,
            "width": 360,
          }
        }
      />
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "borderRadius": 10,
            "height": 360,
            "marginHorizontal": 5,
            "width": 360,
          }
        }
      />
    </View>
  </View>
</RCTSafeAreaView>
`;
